// Задача 1: Задайте значения M и N. Напишите
// программу, которая выведет все натуральные числа
// в промежутке от M до N. Использовать рекурсию, не
// использовать циклы.
// M = 1; N = 5-> "1, 2, 3, 4, 5"
// M = 4; N = 8-> "4, 5, 6, 7, 8"

// int n = Convert.ToInt32(Console.ReadLine());
// int m = Convert.ToInt32(Console.ReadLine());
// void F(int m, int n)
// {
//   if (m != n)
//   {
//     if (m > n)
//     {
//       F(m - 1, n);
//       System.Console.Write(m + " ");
//     }
//     else
//     {
//       F(m + 1, n);
//       System.Console.Write(m + " ");
//     }

//   }
//   else
//   {
//     System.Console.Write(m + " ");
//   }
// }

// F(m, n);

// Задача 2: Напишите программу вычисления функции
// Аккермана с помощью рекурсии. Даны два
// неотрицательных числа m и n.
// m = 2, n = 3->A(m, n) = 29

// Введём последовательность функций a_0, a_1, ..., a_n, ... одного аргумента. Определим их рекурсивно:
// a_0(x) = x + 1
// a_{i+1}(x) = a_{i}[x+2](x)
// Здесь f[n](x) = f(f(...(f(x))...)) — в квадратных скобках записывается число n, 
// и тогда ровно n раз функция применяется к своему аргументу. 
// Таким образом, значение каждой следующей функций из нашей последовательности определяется так: 
// возьмём предыдущую функцию, x+2 раза применим её к числу x — получится значение следующей функции на числе x.

int Akkermann(int m, int n)
{
    if (m == 0)
    {
        return n + 1;
    }
    else
    {
        if (n == 0)
        {
            return Akkermann(m - 1, 1);
        }
        else
        {
            return Akkermann(m - 1, Akkermann(m, n - 1));
        }
    }
}

Console.Write("Введите значение m:");
int n = Convert.ToInt32(Console.ReadLine());
Console.Write("Введите значение n:");
int m = Convert.ToInt32(Console.ReadLine());

System.Console.WriteLine($"Значение функции Аккермана: {Akkermann(m, n)}");

// Задача 3: Задайте произвольный массив. Выведете
// его элементы, начиная с конца. Использовать
// рекурсию, не использовать циклы.
// [1, 2, 5, 0, 10, 34] => 34 10 0 5 2 1

// void LookArray(int[] array, int i)
// {
//     int n = array.Length;
//     if (i < n)
//     {
//         // System.Console.Write(array[n - 1 - i] + " ");
//         LookArray(array, i + 1); // вызываем функцию с инкрементированным индексом
//         System.Console.Write(array[i] + " ");
//     }

// }

// int[] arr = { 1, 2, 5, 0, 10, 34 };
// LookArray(arr, 0);